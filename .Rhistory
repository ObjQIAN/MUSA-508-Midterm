landmark.Buffer, landmark_nn1, landmark_nn2, landmark_nn3, landmark_nn4, landmark_nn5,
school.Buffer, school_nn1, school_nn2, school_nn3, school_nn4, school_nn5,
college.Buffer, college_nn1, college_nn2, college_nn3, college_nn4, college_nn5,
hospital.Buffer, hospital_nn1, hospital_nn2, hospital_nn3, hospital_nn4, hospital_nn5,
park.Buffer, park_nn1, park_nn2, park_nn3, park_nn4, park_nn5,
market.Buffer, market_nn1, market_nn2, market_nn3, market_nn4, market_nn5,
DIST_NAME,building_code_description, quality_grade)
reg.training <-
lm(sale_price ~ ., data = as.data.frame(philly.training) %>%
dplyr::select(sale_price, total_livable_area, Age,
geographic_ward,garage_spaces,
fireplaces, interior_condition,exterior_condition, number_of_bathrooms,
number_of_bedrooms, number_stories,
crime_nn5,p311_nn5,landmark.Buffer,
school_nn5,college.Buffer,
hospital.Buffer, hospital_nn1,
park_nn2, market_nn3))
philly.test <-
philly.test %>%
na.omit()
philly.test <- philly.test %>%
mutate(Regression = "Baseline Regression",
sale_price.Predict = predict(reg.training, philly.test),
sale_price.Error = sale_price.Predict - sale_price,
sale_price.AbsError = abs(sale_price.Predict - sale_price),
sale_price.APE = (abs(sale_price.Predict - sale_price)) / sale_price.Predict)%>%
filter(sale_price < 5000000)
philly.test %>%
st_drop_geometry() %>%
summarise(MAE = mean(sale_price.AbsError),
MAPE = mean(abs(sale_price.APE)*100)) %>%
kbl(col.name=c('Mean Absolute Error','Mean Absolute Percentage Error')) %>%
kable_classic()
# predict competition
assign_test <- predict(reg.training , newdata=to_predict)
to_predict$predict <- assign_test
predicted_sub<-  to_predict %>%
dplyr::select(musaID,predict) %>%
mutate('team' = 'a team') %>%
st_drop_geometry()
# Remove invalid predictions (Maybe need to do this before running the test)
philly.test <-  philly.test[!with(philly.test,is.na(sale_price.Predict)),]
coords <- st_coordinates(philly.test)
neighborList <- knn2nb(knearneigh(coords, 5))
spatialWeights <- nb2listw(neighborList, style="W")
philly.test$lagPrice <- lag.listw(spatialWeights, philly.test$sale_price)
coords.test <-  st_coordinates(philly.test)
neighborList.test <- knn2nb(knearneigh(coords.test, 5))
spatialWeights.test <- nb2listw(neighborList.test, style="W")
ggplot() +
geom_point(data = philly.test, aes(x = lagPrice, y = sale_price), size = 2) +
geom_smooth(data = philly.test, aes(x = lagPrice, y = sale_price), method = "lm", se = F, colour = "#FA7800") +
labs(title = "Price as a function of the spatial lag of price",
x = "Spatial Lag of Price (Mean price of 5 nearest neighbors)",
y = "Sale Price")
philly.test %>%
mutate(lagPriceError = lag.listw(spatialWeights.test, sale_price.Error)) %>%
ggplot()+
geom_point(aes(x =lagPriceError, y =sale_price.Error)) +
geom_smooth(aes(x = lagPriceError, y = sale_price.Error),method = "lm", se=F, colour = "#FA7800") +
labs(title = "Error as a function of the spatial lag of price",
x = "Spatial Lag of Error (Mean error of 5 nearest neighbors)", y = "Sale Price")
moranTest <- moran.mc(philly.test$sale_price.Error,
spatialWeights.test, nsim = 999)
ggplot(as.data.frame(moranTest$res[c(1:999)]), aes(moranTest$res[c(1:999)])) +
geom_histogram(binwidth = 0.01) +
geom_vline(aes(xintercept = moranTest$statistic), colour = "#FA7800",size=1) +
scale_x_continuous(limits = c(-1, 1)) +
labs(title="Observed and permuted Moran's I",
subtitle= "Observed Moran's I in orange",
x="Moran's I",
y="Count") +
plotTheme()
philly.test %>%
as.data.frame() %>%
# Tract is not a good factor here
group_by(DIST_NAME) %>%
summarize(meanPrediction = mean(sale_price.Predict),
meanPrice = mean(sale_price)) %>%
kable() %>%
kable_styling()
knitr::opts_chunk$set(echo = TRUE)
philly.training <- st_join(philly.training, acsTractsPHL.2020)
reg.nhood <-
lm(sale_price ~ ., data = as.data.frame(philly.training) %>%
dplyr::select(sale_price, total_livable_area, Age,
geographic_ward,garage_spaces,
fireplaces, interior_condition,exterior_condition, number_of_bathrooms,
number_of_bedrooms, number_stories,
crime_nn5,p311_nn5,landmark.Buffer,
school_nn5,college.Buffer,
hospital.Buffer, hospital_nn1,
park_nn2, market_nn3,
DIST_NAME, TotalPop, MedRent ,MedHHInc, pctWhite, pctVacant, pctBachelors, pctPoverty))
philly.test <- st_join(philly.test, acsTractsPHL.2020)
philly.test.nhood <-
philly.test %>%
mutate(Regression = "Neighborhood Effects",
sale_price.Predict = predict(reg.nhood, philly.test),
sale_price.Error = sale_price.Predict- sale_price,
sale_price.AbsError = abs(sale_price.Predict- sale_price),
sale_price.APE = (abs(sale_price.Predict- sale_price)) / sale_price)%>%
filter(sale_price < 5000000)
bothRegressions <-
rbind(
dplyr::select(philly.test, starts_with("sale_price"), Regression, DIST_NAME) %>%
mutate(lagPriceError = lag.listw(spatialWeights.test, sale_price.Error)),
dplyr::select(philly.test.nhood, starts_with("sale_price"), Regression, DIST_NAME) %>%
mutate(lagPriceError = lag.listw(spatialWeights.test, sale_price.Error)))
bothRegressions <-
rbind(
dplyr::select(philly.test, starts_with("sale_price"), Regression, DIST_NAME) %>%
mutate(lagPriceError = lag.listw(spatialWeights.test, sale_price.Error)),
dplyr::select(philly.test.nhood, starts_with("sale_price"), Regression, DIST_NAME) %>%
mutate(lagPriceError = lag.listw(spatialWeights.test, sale_price.Error)))
knitr::opts_chunk$set(echo = TRUE)
philly.training <- st_join(philly.training, acsTractsPHL.2020)
reg.nhood <-
lm(sale_price ~ ., data = as.data.frame(philly.training) %>%
dplyr::select(total_livable_area, Age,
geographic_ward,garage_spaces,
fireplaces, interior_condition,exterior_condition, number_of_bathrooms,
number_of_bedrooms, number_stories,
crime_nn5,p311_nn5,landmark.Buffer,
school_nn5,college.Buffer,
hospital.Buffer, hospital_nn1,
park_nn2, market_nn3,
DIST_NAME, TotalPop, MedRent ,MedHHInc, pctWhite, pctVacant, pctBachelors, pctPoverty))
philly.training <- st_join(philly.training, acsTractsPHL.2020)
reg.nhood <-
lm(sale_price ~ ., data = as.data.frame(philly.training) %>%
dplyr::select(total_livable_area, Age,
geographic_ward,garage_spaces,
fireplaces, interior_condition,exterior_condition, number_of_bathrooms,
number_of_bedrooms, number_stories,
crime_nn5,p311_nn5,landmark.Buffer,
school_nn5,college.Buffer,
hospital.Buffer, hospital_nn1,
park_nn2, market_nn3,
DIST_NAME, TotalPop, MedRent ,MedHHInc, pctWhite, pctVacant, pctBachelors, pctPoverty))
knitr::opts_chunk$set(echo = TRUE)
philly.training <- st_join(philly.training, acsTractsPHL.2020)
reg.nhood <-
lm(sale_price ~ ., data = as.data.frame(philly.training) %>%
dplyr::select(sale_price, total_livable_area, Age,
geographic_ward,garage_spaces,
fireplaces, interior_condition,exterior_condition, number_of_bathrooms,
number_of_bedrooms, number_stories,
crime_nn5,p311_nn5,landmark.Buffer,
school_nn5,college.Buffer,
hospital.Buffer, hospital_nn1,
park_nn2, market_nn3,
DIST_NAME, TotalPop, MedRent ,MedHHInc, pctWhite, pctVacant, pctBachelors, pctPoverty))
philly.training <- st_join(philly.training, acsTractsPHL.2020)
reg.nhood <-
lm(sale_price ~ ., data = as.data.frame(philly.training) %>%
dplyr::select(sale_price, total_livable_area, Age,
geographic_ward,garage_spaces,
fireplaces, interior_condition,exterior_condition, number_of_bathrooms,
number_of_bedrooms, number_stories,
crime_nn5,p311_nn5,landmark.Buffer,
school_nn5,college.Buffer,
hospital.Buffer, hospital_nn1,
park_nn2, market_nn3,
DIST_NAME, TotalPop, MedRent ,MedHHInc, pctWhite, pctVacant, pctBachelors, pctPoverty))
philly.test <- st_join(philly.test, acsTractsPHL.2020)
philly.test.nhood <-
philly.test %>%
mutate(Regression = "Neighborhood Effects",
sale_price.Predict = predict(reg.nhood, philly.test),
sale_price.Error = sale_price.Predict- sale_price,
sale_price.AbsError = abs(sale_price.Predict- sale_price),
sale_price.APE = (abs(sale_price.Predict- sale_price)) / sale_price)%>%
filter(sale_price < 5000000)
philly.training <- st_join(philly.training, acsTractsPHL.2020)
reg.nhood <-
lm(sale_price ~ ., data = as.data.frame(philly.training) %>%
dplyr::select(sale_price, total_livable_area, Age,
geographic_ward,garage_spaces,
fireplaces, interior_condition,exterior_condition, number_of_bathrooms,
number_of_bedrooms, number_stories,
crime_nn5,p311_nn5,landmark.Buffer,
school_nn5,college.Buffer,
hospital.Buffer, hospital_nn1,
park_nn2, market_nn3,
DIST_NAME, TotalPop, MedRent ,MedHHInc, pctWhite, pctVacant, pctBachelors, pctPoverty))
philly.training <- st_join(philly.training, acsTractsPHL.2020)
reg.nhood <-
lm(sale_price ~ ., data = as.data.frame(philly.training) %>%
dplyr::select(sale_price, total_livable_area, Age,
geographic_ward,garage_spaces,
fireplaces, interior_condition,exterior_condition, number_of_bathrooms,
number_of_bedrooms, number_stories,
crime_nn5,p311_nn5,landmark.Buffer,
school_nn5,college.Buffer,
hospital.Buffer, hospital_nn1,
park_nn2, market_nn3,
DIST_NAME, TotalPop, MedRent ,MedHHInc, pctWhite, pctVacant, pctBachelors, pctPoverty))
philly.test <- st_join(philly.test, acsTractsPHL.2020)
philly.test.nhood <-
philly.test %>%
mutate(Regression = "Neighborhood Effects",
sale_price.Predict = predict(reg.nhood, philly.test),
sale_price.Error = sale_price.Predict- sale_price,
sale_price.AbsError = abs(sale_price.Predict- sale_price),
sale_price.APE = (abs(sale_price.Predict- sale_price)) / sale_price)%>%
filter(sale_price < 5000000)
bothRegressions <-
rbind(
dplyr::select(philly.test, starts_with("sale_price"), Regression, DIST_NAME) %>%
mutate(lagPriceError = lag.listw(spatialWeights.test, sale_price.Error)),
dplyr::select(philly.test.nhood, starts_with("sale_price"), Regression, DIST_NAME) %>%
mutate(lagPriceError = lag.listw(spatialWeights.test, sale_price.Error)))
philly.test.nhood <-
philly.test %>%
mutate(Regression = "Neighborhood Effects",
sale_price.Predict = predict(reg.nhood, philly.test),
sale_price.Error = sale_price.Predict- sale_price,
sale_price.AbsError = abs(sale_price.Predict- sale_price),
sale_price.APE = (abs(sale_price.Predict- sale_price)) / sale_price)%>%
filter(sale_price < 5000000)
bothRegressions <-
rbind(
dplyr::select(philly.test, starts_with("sale_price"), Regression, DIST_NAME) %>%
mutate(lagPriceError = lag.listw(spatialWeights.test, sale_price.Error)),
dplyr::select(philly.test.nhood, starts_with("sale_price"), Regression, DIST_NAME) %>%
mutate(lagPriceError = lag.listw(spatialWeights.test, sale_price.Error)))
st_drop_geometry(bothRegressions) %>%
gather(Variable, Value, -Regression, -DIST_NAME) %>%
filter(Variable == "sale_price.AbsError" | Variable == "sale_price.APE") %>%
group_by(Regression, Variable) %>%
summarize(meanValue = mean(Value, na.rm = T)) %>%
spread(Variable, meanValue) %>%
kable()
knitr::opts_chunk$set(echo = TRUE)
fitControl <- trainControl(method = "cv", number = 100)
set.seed(825)
reg.cv <-
train(sale_price ~ ., data = st_drop_geometry(to_train) %>%
dplyr::select(sale_price, total_livable_area, Age,
geographic_ward,garage_spaces,
fireplaces, interior_condition,exterior_condition, number_of_bathrooms,
number_of_bedrooms, number_stories,
crime_nn5,p311_nn5,landmark.Buffer,
school_nn5,college.Buffer,
hospital.Buffer, hospital_nn1,
park_nn2, market_nn3,
DIST_NAME, TotalPop, MedRent ,MedHHInc, pctWhite, pctVacant, pctBachelors, pctPoverty),
method = "lm", trControl = fitControl, na.action = na.pass)
ggplot(reg.cv$resample, aes(x=MAE)) +
geom_histogram(color='white',fill="orange",bins=100)+
scale_x_continuous(labels = comma,limits=c(0,150000),breaks=c(25000,50000,75000,100000,125000,150000))+
scale_y_continuous(breaks=c(0,2,4,6,8,10))
knitr::opts_chunk$set(echo = TRUE)
fitControl <- trainControl(method = "cv", number = 100)
set.seed(825)
reg.cv <-
train(sale_price ~ ., data = st_drop_geometry(to_train) %>%
dplyr::select(sale_price, total_livable_area, Age,
geographic_ward,garage_spaces,
fireplaces, interior_condition,exterior_condition, number_of_bathrooms,
number_of_bedrooms, number_stories,
crime_nn5,p311_nn5,landmark.Buffer,
school_nn5,college.Buffer,
hospital.Buffer, hospital_nn1,
park_nn2, market_nn3,
DIST_NAME, TotalPop, MedRent ,MedHHInc, pctWhite, pctVacant, pctBachelors, pctPoverty),
method = "lm", trControl = fitControl, na.action = na.pass)
ggplot(reg.cv$resample, aes(x=MAE)) +
geom_histogram(color='white',fill="orange",bins=100)
fitControl <- trainControl(method = "cv", number = 100)
set.seed(825)
reg.cv <-
train(sale_price ~ ., data = st_drop_geometry(to_train) %>%
dplyr::select(sale_price, total_livable_area, Age,
geographic_ward,garage_spaces,
fireplaces, interior_condition,exterior_condition, number_of_bathrooms,
number_of_bedrooms, number_stories,
crime_nn5,p311_nn5,landmark.Buffer,
school_nn5,college.Buffer,
hospital.Buffer, hospital_nn1,
park_nn2, market_nn3,
DIST_NAME, TotalPop, MedRent ,MedHHInc, pctWhite, pctVacant, pctBachelors, pctPoverty),
method = "lm", trControl = fitControl, na.action = na.pass)
ggplot(reg.cv$resample, aes(x=MAE)) +
geom_histogram(color='white',fill="orange",bins=100)
knitr::opts_chunk$set(echo = TRUE)
fitControl <- trainControl(method = "cv", number = 100)
set.seed(825)
reg.cv <-
train(sale_price ~ ., data = st_drop_geometry(to_train) %>%
dplyr::select(sale_price, total_livable_area, Age,
geographic_ward,garage_spaces,
fireplaces, interior_condition,exterior_condition, number_of_bathrooms,
number_of_bedrooms, number_stories,
crime_nn5,p311_nn5,landmark.Buffer,
school_nn5,college.Buffer,
hospital.Buffer, hospital_nn1,
park_nn2, market_nn3,
DIST_NAME, TotalPop, MedRent ,MedHHInc, pctWhite, pctVacant, pctBachelors, pctPoverty),
method = "lm", trControl = fitControl, na.action = na.pass)
ggplot(data = reg.cv$resample) +
geom_histogram(aes(x = reg.cv$resample$MAE), fill = 'orange') +
labs(title="Distribution of Cross-validation MAE",
subtitle = "K = 100\n",
caption = "Figure RESULT 4.2") +
xlab('MAE of Model 2') +
ylab('Count') +
plotTheme()
coords.test <-  st_coordinates(philly.test)
neighborList.test <- knn2nb(knearneigh(coords.test, 5))
spatialWeights.test <- nb2listw(neighborList.test, style="W")
ggplot() +
geom_point(data = philly.test, aes(x = lagPrice, y = sale_price), size = 2) +
geom_smooth(data = philly.test, aes(x = lagPrice, y = sale_price), method = "lm", se = F, colour = "#FA7800") +
labs(title = "Price as a function of the spatial lag of price",
x = "Spatial Lag of Price (Mean price of 5 nearest neighbors)",
y = "Sale Price")
philly.test %>%
mutate(lagPriceError = lag.listw(spatialWeights.test, sale_price.Error)) %>%
ggplot()+
geom_point(aes(x =lagPriceError, y =sale_price.Error)) +
geom_smooth(aes(x = lagPriceError, y = sale_price.Error),method = "lm", se=F, colour = "#FA7800") +
labs(title = "Error as a function of the spatial lag of price",
x = "Spatial Lag of Error (Mean error of 5 nearest neighbors)", y = "Sale Price")
knitr::opts_chunk$set(echo = TRUE)
moranTest <- moran.mc(philly.test$sale_price.Error,
spatialWeights.test, nsim = 999)
ggplot(as.data.frame(moranTest$res[c(1:999)]), aes(moranTest$res[c(1:999)])) +
geom_histogram(binwidth = 0.01) +
geom_vline(aes(xintercept = moranTest$statistic), colour = "#FA7800",size=1) +
scale_x_continuous(limits = c(-1, 1)) +
labs(title="Observed and permuted Moran's I",
subtitle= "Observed Moran's I in orange",
x="Moran's I",
y="Count") +
plotTheme()
philly.test %>%
as.data.frame() %>%
# Tract is not a good factor here
group_by(DIST_NAME) %>%
summarize(meanPrediction = mean(sale_price.Predict),
meanPrice = mean(sale_price)) %>%
kable() %>%
kable_styling()
philly.training <- st_join(philly.training, acsTractsPHL.2020)
reg.nhood <-
lm(sale_price ~ ., data = as.data.frame(philly.training) %>%
dplyr::select(sale_price, total_livable_area, Age,
geographic_ward,garage_spaces,
fireplaces, interior_condition,exterior_condition, number_of_bathrooms,
number_of_bedrooms, number_stories,
crime_nn5,p311_nn5,landmark.Buffer,
school_nn5,college.Buffer,
hospital.Buffer, hospital_nn1,
park_nn2, market_nn3,
DIST_NAME, TotalPop, MedRent ,MedHHInc, pctWhite, pctVacant, pctBachelors, pctPoverty))
knitr::opts_chunk$set(echo = TRUE)
philly.training <- st_join(philly.training, acsTractsPHL.2020)
reg.nhood <-
lm(sale_price ~ ., data = as.data.frame(philly.training) %>%
dplyr::select(sale_price, total_livable_area, Age,
geographic_ward,garage_spaces,
fireplaces, interior_condition,exterior_condition, number_of_bathrooms,
number_of_bedrooms, number_stories,
crime_nn5,p311_nn5,landmark.Buffer,
school_nn5,college.Buffer,
hospital.Buffer, hospital_nn1,
park_nn2, market_nn3,
DIST_NAME, TotalPop, MedRent ,MedHHInc, pctWhite, pctVacant, pctBachelors, pctPoverty))
philly.test <- st_join(philly.test, acsTractsPHL.2020)
philly.test.nhood <-
philly.test %>%
mutate(Regression = "Neighborhood Effects",
sale_price.Predict = predict(reg.nhood, philly.test),
sale_price.Error = sale_price.Predict- sale_price,
sale_price.AbsError = abs(sale_price.Predict- sale_price),
sale_price.APE = (abs(sale_price.Predict- sale_price)) / sale_price)%>%
filter(sale_price < 5000000)
philly.test <- st_join(philly.test, acsTractsPHL.2020)
philly.test.nhood <-
philly.test %>%
mutate(Regression = "Neighborhood Effects",
sale_price.Predict = predict(reg.nhood, philly.test),
sale_price.Error = sale_price.Predict- sale_price,
sale_price.AbsError = abs(sale_price.Predict- sale_price),
sale_price.APE = (abs(sale_price.Predict- sale_price)) / sale_price)%>%
filter(sale_price < 5000000)
bothRegressions <-
rbind(
dplyr::select(philly.test, starts_with("sale_price"), Regression, DIST_NAME) %>%
mutate(lagPriceError = lag.listw(spatialWeights.test, sale_price.Error)),
dplyr::select(philly.test.nhood, starts_with("sale_price"), Regression, DIST_NAME) %>%
mutate(lagPriceError = lag.listw(spatialWeights.test, sale_price.Error)))
knitr::opts_chunk$set(echo = TRUE)
st_join(bothRegressions, tracts20) %>%
group_by(Regression, raceContext) %>%
summarize(mean.MAPE = scales::percent(mean(sale_price.APE, na.rm = T))) %>%
st_drop_geometry() %>%
spread(raceContext, mean.MAPE) %>%
kable(caption = "Test set MAPE by neighborhood racial context")
tracts20 <-
get_acs(geography = "tract", variables = c("B25026_001E","B02001_002E","B19013_001E"),
year=2020, state=42, county=101, geometry=TRUE, output="wide") %>%
st_transform('ESRI:102729') %>%
rename(TotalPop = B25026_001E,
NumberWhites =B02001_002E,
Median_Income = B19013_001E) %>%
mutate(percentWhite = NumberWhites / TotalPop,
raceContext = ifelse(percentWhite > .5, "Majority White", "Majority Non-White"),
incomeContext = ifelse(Median_Income > 32322, "High Income", "Low Income"))
grid.arrange(ncol = 2,
ggplot() + geom_sf(data = na.omit(tracts20), aes(fill = raceContext)) +
scale_fill_manual(values = c("#25CB10", "#FA7800"), name="Race Context") +
labs(title = "Race Context") +
mapTheme() + theme(legend.position="bottom"),
ggplot() + geom_sf(data = na.omit(tracts20), aes(fill = incomeContext)) +
scale_fill_manual(values = c("#25CB10", "#FA7800"), name="Income Context") +
labs(title = "Income Context") +
mapTheme() +
theme(legend.position="bottom"))
st_join(bothRegressions, tracts20) %>%
group_by(Regression, raceContext) %>%
summarize(mean.MAPE = scales::percent(mean(sale_price.APE, na.rm = T))) %>%
st_drop_geometry() %>%
spread(raceContext, mean.MAPE) %>%
kable(caption = "Test set MAPE by neighborhood racial context")
st_join(bothRegressions, tracts20) %>%
group_by(Regression, raceContext) %>%
summarize(mean.MAPE = scales::percent(mean(sale_price.APE, na.rm = T))) %>%
st_drop_geometry() %>%
spread(raceContext, mean.MAPE) %>%
kable(caption = "Test set MAPE by neighborhood racial context")
st_drop_geometry(bothRegressions) %>%
group_by(Regression, DIST_NAME) %>%
summarize(mean.MAPE = mean(sale_price.APE, na.rm = T)) %>%
ungroup() %>%
left_join(district, by = c("DIST_NAME" = "DIST_NAME")) %>%
st_sf() %>%
ggplot() +
geom_sf(aes(fill = mean.MAPE)) +
geom_sf(data = bothRegressions, colour = "black", size = .1) +
facet_wrap(~Regression) +
scale_fill_gradient(low = palette5[1], high = palette5[5],
name = "MAPE") +
labs(title = "Mean test set MAPE by neighborhood") +
mapTheme()
bothRegressions <-
rbind(
dplyr::select(philly.test, starts_with("sale_price"), Regression, DIST_NAME) %>%
mutate(lagPriceError = lag.listw(spatialWeights.test, sale_price.Error)),
dplyr::select(philly.test.nhood, starts_with("sale_price"), Regression, DIST_NAME) %>%
mutate(lagPriceError = lag.listw(spatialWeights.test, sale_price.Error)))
knitr::opts_chunk$set(echo = TRUE)
st_drop_geometry(Philly.test) %>%
group_by(Regression, DIST_NAME) %>%
summarize(mean.MAPE = mean(abs(sale_price.APE * 100), na.rm = T)) %>%
ungroup() %>%
left_join(planning_districts) %>%
st_sf() %>%
ggplot() +
geom_sf(aes(fill = mean.MAPE)) +
scale_fill_gradient(low = palette5[1], high = palette5[5],
name = "Mean Absolute Percent Error") +
labs(title = "Mean test set MAPE by neighborhood") +
mapTheme()
knitr::opts_chunk$set(echo = TRUE)
st_drop_geometry(philly.test) %>%
group_by(Regression, DIST_NAME) %>%
summarize(mean.MAPE = mean(abs(sale_price.APE * 100), na.rm = T)) %>%
ungroup() %>%
left_join(planning_districts) %>%
st_sf() %>%
ggplot() +
geom_sf(aes(fill = mean.MAPE)) +
scale_fill_gradient(low = palette5[1], high = palette5[5],
name = "Mean Absolute Percent Error") +
labs(title = "Mean test set MAPE by neighborhood") +
mapTheme()
knitr::opts_chunk$set(echo = TRUE)
st_drop_geometry(philly.test) %>%
group_by(Regression, DIST_NAME) %>%
summarize(mean.MAPE = mean(abs(sale_price.APE * 100), na.rm = T)) %>%
ungroup() %>%
left_join(DIST_NAME) %>%
st_sf() %>%
ggplot() +
geom_sf(aes(fill = mean.MAPE)) +
scale_fill_gradient(low = palette5[1], high = palette5[5],
name = "Mean Absolute Percent Error") +
labs(title = "Mean test set MAPE by neighborhood") +
mapTheme()
knitr::opts_chunk$set(echo = TRUE)
ggplot()+
geom_sf(data=DIST_NAME,fill='grey80',color='transparent')+
geom_sf(data = nhoods, aes(colour = q5(sale_price.Predict)),
show.legend = "point", size = .35) +
scale_colour_manual(values = palette5,
labels=qBr(nhoods,"sale_price.Predict"),
name="Quintile\nBreaks") +
labs(title="Predocted House Sale Price, Philadelphia") +
mapTheme()
knitr::opts_chunk$set(echo = TRUE)
ggplot()+
geom_sf(data= DIST_NAME,fill='grey80',color='transparent')+
geom_sf(data = nhoods, aes(colour = q5(sale_price.Predict)),
show.legend = "point", size = .35) +
scale_colour_manual(values = palette5,
labels=qBr(nhoods,"sale_price.Predict"),
name="Quintile\nBreaks") +
labs(title="Predocted House Sale Price, Philadelphia") +
mapTheme()
