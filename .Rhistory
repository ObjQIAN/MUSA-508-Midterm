geographic_ward,garage_spaces,fireplaces, interior_condition,exterior_condition,
number_of_bathrooms, number_of_bedrooms, number_stories) %>%
st_drop_geometry()
stargazer(data = internal.list, type = "html",
title = " Table.1 Summary Statistics of Internal Characteristics ",
header = FALSE,
single.row = TRUE)
# 2.external characteristics1
external.list <- to_train %>%
dplyr:: select(crimes.Buffer, crime_nn1, crime_nn2, crime_nn3, crime_nn4, crime_nn5,
p311.Buffer, p311_nn1, p311_nn2, p311_nn3, p311_nn4, p311_nn5,
landmark.Buffer, landmark_nn1, landmark_nn2, landmark_nn3, landmark_nn4, landmark_nn5,
school.Buffer, school_nn1, school_nn2, school_nn3, school_nn4, school_nn5,
college.Buffer, college_nn1, college_nn2, college_nn3, college_nn4, college_nn5,
hospital.Buffer, hospital_nn1, hospital_nn2, hospital_nn3, hospital_nn4, hospital_nn5,
park.Buffer, park_nn1, park_nn2, park_nn3, park_nn4, park_nn5,
market.Buffer, market_nn1, market_nn2, market_nn3, market_nn4, market_nn5) %>%
st_drop_geometry()
stargazer(data = external.list, type = "html",
title = " Table.2 Summary Statistics of External Characteristics1 ",
header = FALSE,
single.row = TRUE)
# 3. external characteristics2 - acs features
census.list <- to_train %>%
dplyr:: select( TotalPop, MedRent ,MedHHInc, pctWhite, pctVacant, pctBachelors, pctPoverty)
stargazer(census.list, type = "html",
title = "Table.3 Summary Statistics of External Characteristics - Census Data ",
header = FALSE,
single.row = TRUE)
## Home Features cor
st_drop_geometry(to_train) %>%
dplyr::select(sale_price, total_livable_area, Age,
depth, frontage, off_street_open, geographic_ward, garage_spaces,
crime_nn5, p311_nn5, landmark.Buffer, school_nn5, college.Buffer, hospital_nn1, market_nn3) %>%
filter(sale_price <= 1000000, Age < 500, total_livable_area <10000, frontage < 500) %>%
gather(Variable, Value, -sale_price) %>%
ggplot(aes(Value, sale_price)) +
geom_point(size = .5) +
geom_smooth(data = . %>% filter(sale_price >0), method = "lm", se=F, colour = "#FA7800") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Price as a function of continuous variables") +
plotTheme()
to_train %>%
dplyr::select(sale_price, exterior_condition) %>%
mutate(exterior_condition = as.factor(exterior_condition)) %>%
filter(sale_price <= 1000000) %>%
group_by(exterior_condition) %>%
summarize(avg_sale_price = mean(sale_price)) %>%
ggplot(aes(x = exterior_condition, y = avg_sale_price)) +
geom_bar(stat = "identity") +
labs(
title = "Average Sale Price by Exterior Condition",
y = "Average Sale Price"
) +
plotTheme() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
to_train %>%
dplyr::select(sale_price, fireplaces) %>%
mutate(fireplaces = as.factor(fireplaces)) %>%
filter(sale_price <= 1000000) %>%
filter(!is.na(fireplaces)) %>%
group_by(fireplaces) %>%
summarize(avg_sale_price = mean(sale_price)) %>%
ggplot(aes(x = fireplaces, y = avg_sale_price)) +
geom_bar(stat = "identity") +
labs(
title = "Average Sale Price by Fireplaces",
y = "Average Sale Price"
) +
plotTheme() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
to_train %>%
dplyr::select(sale_price, interior_condition) %>%
mutate(interior_condition = as.factor(interior_condition)) %>%
filter(sale_price <= 1000000) %>%
filter(!is.na(interior_condition)) %>%
group_by(interior_condition) %>%
summarize(avg_sale_price = mean(sale_price)) %>%
ggplot(aes(x = interior_condition, y = avg_sale_price)) +
geom_bar(stat = "identity") +
labs(
title = "Average Sale Price by Interior Condition",
y = "Average Sale Price"
) +
plotTheme() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
to_train %>%
dplyr::select(sale_price, number_of_bathrooms) %>%
mutate(number_of_bathrooms = as.factor(number_of_bathrooms)) %>%
filter(sale_price <= 1000000) %>%
filter(!is.na(number_of_bathrooms)) %>%
group_by(number_of_bathrooms) %>%
summarize(avg_sale_price = mean(sale_price)) %>%
ggplot(aes(x = number_of_bathrooms, y = avg_sale_price)) +
geom_bar(stat = "identity") +
labs(
title = "Average Sale Price by Number of Bathrooms",
y = "Average Sale Price"
) +
plotTheme() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
to_train %>%
dplyr::select(sale_price, number_of_bedrooms) %>%
mutate(number_of_bedrooms = as.factor(number_of_bedrooms)) %>%
filter(sale_price <= 1000000) %>%
filter(!is.na(number_of_bedrooms)) %>%
group_by(number_of_bedrooms) %>%
summarize(avg_sale_price = mean(sale_price)) %>%
ggplot(aes(x = number_of_bedrooms, y = avg_sale_price)) +
geom_bar(stat = "identity") +
labs(
title = "Average Sale Price by Number of Bedrooms",
y = "Average Sale Price"
) +
plotTheme() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
to_train %>%
dplyr::select(sale_price, number_stories) %>%
mutate(number_stories = as.factor(number_stories)) %>%
filter(sale_price <= 1000000) %>%
filter(!is.na(number_stories)) %>%
group_by(number_stories) %>%
summarize(avg_sale_price = mean(sale_price)) %>%
ggplot(aes(x = number_stories, y = avg_sale_price)) +
geom_bar(stat = "identity") +
labs(
title = "Average Sale Price by Number of Stories",
y = "Average Sale Price"
) +
plotTheme() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# add reclassified data
to_train <- to_train %>%
mutate(
exterior_condition_re = case_when(
exterior_condition %in% 1:3 ~ 1,
exterior_condition %in% 4:5 ~ 2,
exterior_condition %in% 6:7 ~ 3
)
) %>%
mutate(
fireplaces_re = case_when(
fireplaces %in% 0:1 ~ 1,
fireplaces == 2     ~ 2,
fireplaces %in% 3:5 ~ 3
)
) %>%
mutate(
interior_condition_re = case_when(
interior_condition %in% 0:2 ~ 1,
interior_condition %in% 3:4 ~ 2,
interior_condition %in% 5:7 ~ 3
)
) %>%
mutate(
number_of_bathrooms_re = case_when(
number_of_bathrooms ==0      ~ 1,
number_of_bathrooms %in% 1:2 ~ 2,
number_of_bathrooms %in% 3:6 ~ 3
)
) %>%
mutate(
number_of_bedrooms_re = case_when(
number_of_bedrooms %in% 0:1 ~ 1,
number_of_bedrooms %in% 2:3 ~ 2,
number_of_bedrooms %in% 4:31 ~ 3
)
)%>%
mutate(
number_stories_re = case_when(
number_stories == 1     ~ 1,
number_stories == 2     ~ 2,
number_stories %in% 3:5 ~ 3
)
)
philly_sub_200k <- st_drop_geometry(to_train) %>%
filter(sale_price <= 2000000, total_livable_area < 10000, total_livable_area > 0)
internal.list <- to_train %>%
dplyr:: select(Age, total_livable_area, frontage, depth,
geographic_ward,garage_spaces,fireplaces, interior_condition,exterior_condition,
number_of_bathrooms, number_of_bedrooms, number_stories,
exterior_condition_re, fireplaces_re, number_of_bathrooms_re, number_of_bedrooms_re,number_stories_re ) %>%
st_drop_geometry()
numericVars.internal <-
select_if(internal.list, is.numeric) %>%
na.omit()
ggcorrplot(
round(cor(numericVars.internal), 1),
p.mat = cor_pmat(numericVars.internal),
colors = c("#25CB10", "white", "#FA7800"),
lab_size = 1,
tl.cex = 8,
type="lower",
insig = "blank") +
labs(title = "Correlation across numeric variables\n(internal features)\n") +
plotTheme()
BED_Reg <- lm(sale_price ~ number_of_bedrooms, data = philly_sub_200k)
summary(BED_Reg)
BATH_Reg <- lm(sale_price ~ number_of_bathrooms, data = philly_sub_200k)
summary(BATH_Reg)
external.list <- to_train %>%
dplyr:: select(crime_nn5,
p311_nn5,
landmark.Buffer,
school_nn5,college.Buffer,
hospital.Buffer, hospital_nn1,
park_nn2, market_nn3) %>%
st_drop_geometry()
numericVars.external <-
select_if(external.list, is.numeric) %>%
na.omit()
ggcorrplot(
round(cor(numericVars.external ), 1),
p.mat = cor_pmat(numericVars.external ),
colors = c("#25CB10", "white", "#FA7800"),
lab_size = 1,
tl.cex = 8,
type="lower",
insig = "blank") +
labs(title = "Correlation across numeric variables\n(internal features)\n") +
plotTheme()
numericVars.spatial <-
select_if(census.list, is.numeric) %>%
na.omit() %>%
st_drop_geometry()
ggcorrplot(
round(cor(numericVars.spatial ), 1),
p.mat = cor_pmat(numericVars.spatial),
colors = c("#25CB10", "white", "#FA7800"),
lab_size = 1,
tl.cex = 8,
type="lower",
insig = "blank") +
labs(title = "Correlation across numeric variables\n(census features)\n") +
plotTheme()
cor.test(philly_sub_200k$total_livable_area,
philly_sub_200k$sale_price,
method = "pearson")
livingReg <- lm(sale_price ~ total_livable_area, data = philly_sub_200k)
summary(livingReg)
ggscatter(philly_sub_200k,
x = "total_livable_area",
y = "sale_price",
add = "reg.line") +
stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")), label.y = 2500000) +
stat_regline_equation(label.y = 2250000)
reg1 <- lm(sale_price ~ ., data = philly_sub_200k %>%
dplyr::select(sale_price, Age, total_livable_area,
geographic_ward,garage_spaces,
fireplaces, interior_condition,exterior_condition, number_of_bathrooms,
number_of_bedrooms, number_stories,
crime_nn5,p311_nn5,landmark.Buffer,
school_nn5,college.Buffer,
hospital.Buffer, hospital_nn1,
park_nn2, market_nn3,
TotalPop, MedRent ,MedHHInc, pctWhite, pctVacant, pctBachelors, pctPoverty))
summary(reg1)
stargazer(reg1, type = "html",
title = "Table 4.1 Summary Statistics of Model 1 ",
header = FALSE,
single.row = TRUE)
broom::glance(reg1) %>%
kable(caption = 'Table Summary of Model Evaluation Parameters') %>%
kable_styling("striped", full_width = F)
## Plot of marginal response
effect_plot(reg1, pred = total_livable_area, interval = TRUE, plot.points = TRUE)
## Plot coefficients
plot_summs(reg1, scale = TRUE)
to_train <- to_train %>%
mutate(landmark.Buffer = ifelse(is.na(landmark.Buffer), 0, landmark.Buffer))
to_train <- to_train %>%
mutate(school.Buffer = ifelse(is.na(school.Buffer), 0, school.Buffer))
to_train <- to_train %>%
mutate(college.Buffer = ifelse(is.na(college.Buffer), 0, college.Buffer))
to_train <- to_train %>%
mutate(hospital.Buffer = ifelse(is.na(hospital.Buffer), 0, hospital.Buffer))
to_train <- to_train %>%
mutate(park.Buffer = ifelse(is.na(park.Buffer), 0, park.Buffer))
to_train <- to_train %>%
mutate(market.Buffer = ifelse(is.na(market.Buffer), 0, market.Buffer))
inTrain <- createDataPartition(
y = paste(to_train$building_code_description, to_train$quality_grade),
p = .60, list = FALSE)
philly.training <- to_train[inTrain,]
philly.test <- to_train[-inTrain,]
philly.training <- philly.training%>%
dplyr::select(sale_price, Age, total_livable_area,
geographic_ward,garage_spaces,fireplaces, interior_condition,exterior_condition,
number_of_bathrooms, number_of_bedrooms, number_stories,
toPredict, zip_code, geometry,
crimes.Buffer, crime_nn1, crime_nn2, crime_nn3, crime_nn4, crime_nn5,
p311.Buffer, p311_nn1, p311_nn2, p311_nn3, p311_nn4, p311_nn5,
landmark.Buffer, landmark_nn1, landmark_nn2, landmark_nn3, landmark_nn4, landmark_nn5,
school.Buffer, school_nn1, school_nn2, school_nn3, school_nn4, school_nn5,
college.Buffer, college_nn1, college_nn2, college_nn3, college_nn4, college_nn5,
hospital.Buffer, hospital_nn1, hospital_nn2, hospital_nn3, hospital_nn4, hospital_nn5,
park.Buffer, park_nn1, park_nn2, park_nn3, park_nn4, park_nn5,
market.Buffer, market_nn1, market_nn2, market_nn3, market_nn4, market_nn5,
DIST_NAME,building_code_description, quality_grade, musaID)
philly.test <- philly.test%>%
dplyr::select(sale_price, Age, total_livable_area,
geographic_ward,garage_spaces,fireplaces, interior_condition,exterior_condition,
number_of_bathrooms, number_of_bedrooms, number_stories,
toPredict, zip_code, geometry,
crimes.Buffer, crime_nn1, crime_nn2, crime_nn3, crime_nn4, crime_nn5,
p311.Buffer, p311_nn1, p311_nn2, p311_nn3, p311_nn4, p311_nn5,
landmark.Buffer, landmark_nn1, landmark_nn2, landmark_nn3, landmark_nn4, landmark_nn5,
school.Buffer, school_nn1, school_nn2, school_nn3, school_nn4, school_nn5,
college.Buffer, college_nn1, college_nn2, college_nn3, college_nn4, college_nn5,
hospital.Buffer, hospital_nn1, hospital_nn2, hospital_nn3, hospital_nn4, hospital_nn5,
park.Buffer, park_nn1, park_nn2, park_nn3, park_nn4, park_nn5,
market.Buffer, market_nn1, market_nn2, market_nn3, market_nn4, market_nn5,
DIST_NAME,building_code_description, quality_grade, musaID)
reg.training <-
lm(sale_price ~ ., data = as.data.frame(philly.training) %>%
dplyr::select(sale_price, total_livable_area, Age,
geographic_ward,garage_spaces,
fireplaces, interior_condition,exterior_condition, number_of_bathrooms,
number_of_bedrooms, number_stories,
crime_nn5,p311_nn5,landmark.Buffer,
school_nn5,college.Buffer,
hospital.Buffer, hospital_nn1,
park_nn2, market_nn3))
philly.test <-
philly.test %>%
na.omit()
philly.test <- philly.test %>%
mutate(Regression = "Baseline Regression",
sale_price.Predict = predict(reg.training, philly.test),
sale_price.Error = sale_price.Predict - sale_price,
sale_price.AbsError = abs(sale_price.Predict - sale_price),
sale_price.APE = (abs(sale_price.Predict - sale_price)) / sale_price.Predict)%>%
filter(sale_price < 5000000)
philly.test %>%
st_drop_geometry() %>%
summarise(MAE = mean(sale_price.AbsError),
MAPE = mean(abs(sale_price.APE)*100)) %>%
kbl(col.name=c('Mean Absolute Error','Mean Absolute Percentage Error')) %>%
kable_classic()
fitControl <- trainControl(method = "cv", number = 100)
set.seed(825)
reg.cv <-
train(sale_price ~ ., data = st_drop_geometry(to_train) %>%
dplyr::select(sale_price, total_livable_area, Age,
geographic_ward,garage_spaces,
fireplaces, interior_condition,exterior_condition, number_of_bathrooms,
number_of_bedrooms, number_stories,
crime_nn5,p311_nn5,landmark.Buffer,
school_nn5,college.Buffer,
hospital.Buffer, hospital_nn1,
park_nn2, market_nn3,
DIST_NAME, TotalPop, MedRent ,MedHHInc, pctWhite, pctVacant, pctBachelors, pctPoverty),
method = "lm", trControl = fitControl, na.action = na.pass)
ggplot(data = reg.cv$resample) +
geom_histogram(aes(x = reg.cv$resample$MAE), fill = 'orange') +
labs(title="Distribution of Cross-validation MAE",
subtitle = "K = 100\n",
caption = "Figure RESULT 4.2") +
xlab('MAE of Model 2') +
ylab('Count') +
plotTheme()
# predict competition
assign_test <- predict(reg.training , newdata=to_predict)
to_predict$predict <- assign_test
predicted_sub<-  to_predict %>%
dplyr::select(musaID,predict) %>%
mutate('team' = 'a team') %>%
st_drop_geometry()
# Remove invalid predictions (Maybe need to do this before running the test)
philly.test <-  philly.test[!with(philly.test,is.na(sale_price.Predict)),]
coords <- st_coordinates(philly.test)
neighborList <- knn2nb(knearneigh(coords, 5))
spatialWeights <- nb2listw(neighborList, style="W")
philly.test$lagPrice <- lag.listw(spatialWeights, philly.test$sale_price)
coords.test <-  st_coordinates(philly.test)
neighborList.test <- knn2nb(knearneigh(coords.test, 5))
spatialWeights.test <- nb2listw(neighborList.test, style="W")
ggplot() +
geom_point(data = philly.test, aes(x = lagPrice, y = sale_price), size = 2) +
geom_smooth(data = philly.test, aes(x = lagPrice, y = sale_price), method = "lm", se = F, colour = "#FA7800") +
labs(title = "Price as a function of the spatial lag of price",
x = "Spatial Lag of Price (Mean price of 5 nearest neighbors)",
y = "Sale Price")
philly.test %>%
mutate(lagPriceError = lag.listw(spatialWeights.test, sale_price.Error)) %>%
ggplot()+
geom_point(aes(x =lagPriceError, y =sale_price.Error)) +
geom_smooth(aes(x = lagPriceError, y = sale_price.Error),method = "lm", se=F, colour = "#FA7800") +
labs(title = "Error as a function of the spatial lag of price",
x = "Spatial Lag of Error (Mean error of 5 nearest neighbors)", y = "Sale Price")
moranTest <- moran.mc(philly.test$sale_price.Error,
spatialWeights.test, nsim = 999)
ggplot(as.data.frame(moranTest$res[c(1:999)]), aes(moranTest$res[c(1:999)])) +
geom_histogram(binwidth = 0.01) +
geom_vline(aes(xintercept = moranTest$statistic), colour = "#FA7800",size=1) +
scale_x_continuous(limits = c(-1, 1)) +
labs(title="Observed and permuted Moran's I",
subtitle= "Observed Moran's I in orange",
x="Moran's I",
y="Count") +
plotTheme()
philly.test %>%
as.data.frame() %>%
# Tract is not a good factor here
group_by(DIST_NAME) %>%
summarize(meanPrediction = mean(sale_price.Predict),
meanPrice = mean(sale_price)) %>%
kable() %>%
kable_styling()
philly.training <- st_join(philly.training, acsTractsPHL.2020)
reg.nhood <-
lm(sale_price ~ ., data = as.data.frame(philly.training) %>%
dplyr::select(sale_price, total_livable_area, Age,
geographic_ward,garage_spaces,
fireplaces, interior_condition,exterior_condition, number_of_bathrooms,
number_of_bedrooms, number_stories,
crime_nn5,p311_nn5,landmark.Buffer,
school_nn5,college.Buffer,
hospital.Buffer, hospital_nn1,
park_nn2, market_nn3,
DIST_NAME, TotalPop, MedRent ,MedHHInc, pctWhite, pctVacant, pctBachelors, pctPoverty))
philly.test <- st_join(philly.test, acsTractsPHL.2020)
philly.test.nhood <-
philly.test %>%
mutate(Regression = "Neighborhood Effects",
sale_price.Predict = predict(reg.nhood, philly.test),
sale_price.Error = sale_price.Predict- sale_price,
sale_price.AbsError = abs(sale_price.Predict- sale_price),
sale_price.APE = (abs(sale_price.Predict- sale_price)) / sale_price)%>%
filter(sale_price < 5000000)
philly.test.nhood$sale_price.Error <- replace(philly.test.nhood$sale_price.Error, is.na(philly.test.nhood$sale_price.Error), 9999999)
xxxxxxxxx
bothRegressions <-
rbind(
dplyr::select(philly.test, starts_with("sale_price"), Regression, DIST_NAME) %>%
mutate(lagPriceError = lag.listw(spatialWeights.test, sale_price.Error)),
dplyr::select(philly.test.nhood, starts_with("sale_price"), Regression, DIST_NAME) %>%
mutate(lagPriceError = lag.listw(spatialWeights.test, sale_price.Error)))
View(bothRegressions)
bothRegressions <- na.omit(bothRegressions)
st_drop_geometry(bothRegressions) %>%
gather(Variable, Value, -Regression, -DIST_NAME) %>%
filter(Variable == "sale_price.AbsError" | Variable == "sale_price.APE") %>%
group_by(Regression, Variable) %>%
summarize(meanValue = mean(Value, na.rm = T)) %>%
spread(Variable, meanValue) %>%
kable()
ggplot()+
geom_sf(data= DIST_NAME,fill='grey80',color='transparent')+
geom_sf(data = nhoods, aes(colour = q5(sale_price.Predict)),
show.legend = "point", size = .35) +
scale_colour_manual(values = palette5,
labels=qBr(nhoods,"sale_price.Predict"),
name="Quintile\nBreaks") +
labs(title="Predocted House Sale Price, Philadelphia") +
mapTheme()
knitr::opts_chunk$set(echo = TRUE)
ggplot()+
geom_sf(data= district,fill='grey80',color='transparent')+
geom_sf(data = nhoods, aes(colour = q5(sale_price.Predict)),
show.legend = "point", size = .35) +
scale_colour_manual(values = palette5,
labels=qBr(nhoods,"sale_price.Predict"),
name="Quintile\nBreaks") +
labs(title="Predocted House Sale Price, Philadelphia") +
mapTheme()
ggplot()+
geom_sf(data= district,fill='grey80',color='transparent')
knitr::opts_chunk$set(echo = TRUE)
nhoods_plot <- na.omit(nhoods)
ggplot()+
geom_sf(data= district,fill='grey80',color='transparent')+
geom_sf(data = nhoods, aes(colour = q5(sale_price.Predict)),
show.legend = "point", size = .35) +
scale_colour_manual(values = palette5,
labels=qBr(nhoods,"sale_price.Predict"),
name="Quintile\nBreaks") +
labs(title="Predocted House Sale Price, Philadelphia") +
mapTheme()
str(nhoods)
ggplot()+
geom_sf(data= district,fill='grey80',color='transparent')+
geom_sf(data = nhoods, aes(colour = q5(sale_price.Predict)),
show.legend = "point", size = .35) +
#scale_colour_manual(values = palette5,
# #              labels=qBr(nhoods,"sale_price.Predict"),
#          name="Quintile\nBreaks") +
labs(title="Predocted House Sale Price, Philadelphia") +
mapTheme()
View(nhoods)
knitr::opts_chunk$set(echo = TRUE)
# import planning district and housing data
district <-
st_read("https://raw.githubusercontent.com/ObjQIAN/MUSA-508-Midterm/main/data/Planning_Districts.geojson") %>%
dplyr::select(DIST_NAME,ABBREV) %>% #Select data for later prediction
st_transform('ESRI:102729')
nhoods_0 <-
st_read("https://raw.githubusercontent.com/ObjQIAN/MUSA-508-Midterm/main/data/studentData.geojson") %>%
st_transform('ESRI:102729')
nhoods <- st_join(nhoods_0, district)%>%
mutate(Age = 2022 - year_built)
# ggplot, reorder
# Mapping data
ggplot() +
geom_sf(data = district, fill = "grey40") +
geom_sf(data = nhoods, aes(colour = q5(sale_price)),
show.legend = "point", size = .35) +
scale_colour_manual(values = palette5,
labels=qBr(nhoods,"sale_price"),
name="Quintile\nBreaks") +
labs(title="House Sale Price, Philadelphia") +
mapTheme()
